---
apiVersion: v1
kind: Service
metadata:
  name: ratelimit-redis
  labels:
    app: redis
spec:
  ports:
  - name: redis
    port: 6379
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratelimit-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: redis:alpine
        imagePullPolicy: Always
        name: redis
        ports:
        - name: redis
          containerPort: 6379
      restartPolicy: Always
      nodeSelector:
        env: prod
---
apiVersion: v1
kind: Service
metadata:
  name: ratelimit
  labels:
    app: ratelimit
spec:
  ports:
  - name: http-port
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: grpc-port
    port: 8081
    targetPort: 8081
    protocol: TCP
  - name: http-debug
    port: 6070
    targetPort: 6070
    protocol: TCP
  selector:
    app: ratelimit
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratelimit
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ratelimit
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ratelimit
    spec:
      containers:
      - image: envoyproxy/ratelimit:4d2efd61
        imagePullPolicy: Always
        name: ratelimit
        command: ["/bin/ratelimit"]
        env:
        - name: LOG_LEVEL
          value: debug
        - name: REDIS_SOCKET_TYPE
          value: tcp
        - name: REDIS_URL
          value: ratelimit-redis:6379
        - name: USE_STATSD
          value: "false"
        - name: RUNTIME_ROOT
          value: /data
        - name: RUNTIME_SUBDIRECTORY
          value: ratelimit
        - name: RUNTIME_IGNOREDOTFILES
          value: "true"
        - name: RUNTIME_WATCH_ROOT
          value: "false"
        ports:
        - containerPort: 8080
        - containerPort: 8081
        - containerPort: 6070
        volumeMounts:
        - name: config-volume
          mountPath: /data/ratelimit/config
      nodeSelector:
        env: prod
      volumes:
      - name: config-volume
        configMap:
          name: ratelimit-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ratelimit-config
data:
  ingressgateway-ratelimit.yaml: |-
    domain: ingressgateway-ratelimit
    descriptors:
  {{- range .Values.rate_limits }}
  {{$name := .name }}
  {{- range .rules }}
      - key: header_match
        value: "{{ $name }}_{{ .path }}"
  {{- if .total}}
        rate_limit:
          unit: {{ .total.limit_unit }}
          requests_per_unit: {{ .total.limit_requests }}
  {{- end }}
  {{- if or .token .ip }}
        descriptors:
  {{- if .token}}
          - key: auth_token
            rate_limit:
              unit: {{ .token.limit_unit }}
              requests_per_unit: {{ .token.limit_requests }}
  {{- end }}
  {{- if .ip}}
          - key: header_match
            value: "no_auth"
            descriptors:
              - key: remote_address
                rate_limit:
                  unit: {{ .ip.limit_unit }}
                  requests_per_unit: {{ .ip.limit_requests }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}